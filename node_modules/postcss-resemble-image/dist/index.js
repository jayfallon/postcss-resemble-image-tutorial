'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.simpleGradient = exports.complexGradient = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _postcss = require('postcss');

var _postcssValueParser = require('postcss-value-parser');

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _resembleImage = require('./resembleImage');

var _resembleImage2 = _interopRequireDefault(_resembleImage);

var _simpleGradient2 = require('./simpleGradient');

var _simpleGradient3 = _interopRequireDefault(_simpleGradient2);

var _complexGradient2 = require('./complexGradient');

var _complexGradient3 = _interopRequireDefault(_complexGradient2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var resembleFunction = 'resemble-image';

exports.complexGradient = _complexGradient3.default;
exports.simpleGradient = _simpleGradient3.default;


function matchesSelector(node, selectors) {
    return selectors.some(function (selector) {
        return ~node.selectors.indexOf(selector);
    });
}

function resemblePromise(decl, opts) {
    var wrapped = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

    var promises = [];

    var url = void 0;
    var toString = void 0;

    decl.value = (0, _postcssValueParser2.default)(decl.value).walk(function (node) {
        var type = node.type;
        var value = node.value;

        if (type !== 'function') {
            return false;
        }
        if (wrapped && value === resembleFunction) {
            url = node.nodes[0].nodes[0].value;
            toString = node.nodes[0];
        }
        if (!wrapped && value === 'url') {
            url = node.nodes[0].value;
            toString = node;
        }
        if (!url) {
            return false;
        }
        var second = node.nodes[2];
        var fidelity = (0, _postcssValueParser.unit)(second && second.value || opts.fidelity.toString());
        promises.push((0, _resembleImage2.default)(url, _extends({}, opts, {
            fidelity: fidelity
        })).then(function (gradient) {
            node.value = (0, _postcssValueParser.stringify)(toString) + ', ' + gradient;
            node.type = 'word';
        }));
        return false;
    });

    return Promise.all(promises).then(function () {
        return decl.value = decl.value.toString();
    });
}

exports.default = (0, _postcss.plugin)('postcss-resemble-image', function () {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var _opts = opts = _extends({
        fidelity: '25%',
        generator: _simpleGradient3.default,
        selectors: []
    }, opts);

    var selectors = _opts.selectors;

    return function (css) {
        return new Promise(function (resolve, reject) {
            var promises = [];
            css.walkDecls(/^background(?:-image)?/, function (node) {
                var value = node.value;

                if (~value.indexOf(resembleFunction)) {
                    return promises.push(resemblePromise(node, opts));
                }
                if (~value.indexOf('url') && matchesSelector(node.parent, selectors)) {
                    return promises.push(resemblePromise(node, opts, false));
                }
            });
            return Promise.all(promises).then(resolve, reject);
        });
    };
});